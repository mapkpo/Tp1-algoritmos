#include <cstdlib>
#include <iostream>
#include <sstream>
#include "Cajon.hpp"
#include "Deposito.hpp"

using namespace std;

void agregarFruta(string fruta, int kilos, Lista<Pila<Cajon>>& lista){
    // Verificar si existe una lista de pilas de cajones
    if (lista.esvacia()) {
        cout<<"nuc"<<endl;
        lista.add(Pila<Cajon>());
    }

    // Obtener la Ãºltima pila de la lista
    Pila<Cajon> pila = lista.cabeza();
    
    // Agregar los cajones correspondientes a la pila
        if (kilos > 200){
        //recursiva hasta que sea menos de 200kg
    } else if (kilos <= 20)
    {
        //Cajon cajon(kilos,fruta);
        pila.apilar(Cajon(kilos,fruta));
    } else {
        int kilosTemporales = kilos;
        while (kilosTemporales > 20){
            Cajon cajon(20,fruta);
                pila.apilar(cajon);
                kilosTemporales = kilosTemporales - 20;
        }
        Cajon cajon(kilosTemporales,fruta);
        pila.apilar(cajon);
    }

    cout<<"tamanio de la lista "<<lista.size()<<endl; 
    cout<<"tamanio del cajon "<<lista.cabeza().tamanio()<<endl; 
    cout<<pila.tamanio()<<endl;

}


int main() {
    cout << "Hello, World!" << endl;
    /*
    Pila<Cajon> pilaDeManzas;
    Pila<Cajon> pilaDeBananas;

    Cajon uno(20,"Bananas");
    Cajon dos(20,"Manzanas");

    pilaDeManzas.apilar(dos);
    pilaDeBananas.apilar(uno);

    //cout<<pilaDeBananas.tope().getTipo();
    */

    Lista<Pila<Cajon>> depositoBananas;
    Lista<Pila<Cajon>> depositoPeras;
    Lista<Pila<Cajon>> depositoManzanas;


    agregarFruta("Bananas",200, depositoBananas);



    return 0;
}

